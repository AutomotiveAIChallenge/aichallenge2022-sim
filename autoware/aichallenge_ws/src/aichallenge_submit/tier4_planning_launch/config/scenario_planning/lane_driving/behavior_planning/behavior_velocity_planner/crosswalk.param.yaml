/**:
  ros__parameters:
    crosswalk:
      show_processing_time: false # [-] whether to show processing time

      # param for stop position
      stop_line_distance: 3.5 # [m] make stop line away from crosswalk when no explicit stop line exists
      stop_line_margin: 10.0 # [m] if objects cross X meters behind the stop line, the stop position is determined according to the object position (stop_margin meters before the object)
      stop_margin: 2.0 # [m] the vehicle decelerates to be able to stop in front of object with margin
      stop_position_threshold: 1.0 # [m] threshold for check whether the vehicle stop in front of crosswalk

      # param for ego velocity
      min_slow_down_velocity: 2.78 # [m/s] target vehicle velocity when module receive slow down command from FOA (2.78 m/s = 10.0 kmph)
      max_slow_down_jerk: -1.5 # [m/sss] minimum jerk deceleration for safe brake
      max_slow_down_accel: -2.5 # [m/ss] minimum accel deceleration for safe brake
      no_relax_velocity: 2.78 # [m/s] if the current velocity is less than X m/s, ego always stops at the stop position(not relax deceleration constraints 2.78 m/s = 10 kmph)

      # param for stuck vehicle
      stuck_vehicle_velocity: 1.0 # [m/s] maximum velocity threshold whether the vehicle is stuck
      max_lateral_offset: 2.0 # [m] maximum lateral offset for stuck vehicle position should be looked
      stuck_vehicle_attention_range: 10.0 # [m] the detection area is defined as X meters behind the crosswalk

      # param for pass judge logic
      ego_pass_first_margin: 6.0 # [s] time margin for ego pass first situation (the module judges that ego don't have to stop at TTC + MARGIN < TTV condition)
      ego_pass_later_margin: 10.0 # [s] time margin for object pass first situation (the module judges that ego don't have to stop at TTV + MARGIN < TTC condition)
      stop_object_velocity_threshold: 0.28 # [m/s] velocity threshold for the module to judge whether the objects is stopped (0.28 m/s = 1.0 kmph)
      min_object_velocity: 1.39 # [m/s] minimum object velocity (compare the estimated velocity by perception module with this parameter and adopt the larger one to calculate TTV. 1.39 m/s = 5.0 kmph)
      max_yield_timeout: 3.0 # [s] if the pedestrian does not move for X seconds after stopping before the crosswalk, the module judge that ego is able to pass first.

      # param for input data
      tl_state_timeout: 3.0 # [s] timeout threshold for traffic light signal

      # param for target area & object
      crosswalk_attention_range: 1.0 # [m] the detection area is defined as -X meters before the crosswalk to +X meters behind the crosswalk
      target_object:
        unknown: true # [-] whether to look and stop by UNKNOWN objects
        bicycle: true # [-] whether to look and stop by BICYCLE objects
        motorcycle: true # [-] whether to look and stop by MOTORCYCLE objects (tmp: currently it is difficult for perception modules to detect bicycles and motorcycles separately.)
        pedestrian: true # [-] whether to look and stop by PEDESTRIAN objects

    walkway:
      stop_duration_sec: 1.0 # [s] stop time at stop position
      stop_line_distance: 3.5 # [m] make stop line away from crosswalk when no explicit stop line exists
